#include "objects/Level.h"

// 2 map gạch gốc kích thước 10x10 tạo ra ban đầu
// Map 1: Siêu Dễ (20x20)
static int map1[20][20] = {
    {3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
    {3,2,2,2,1,1,1,2,2,1,2,2,1,1,1,2,2,2,2,3},
    {3,2,3,3,3,1,3,3,3,3,3,3,3,1,3,3,3,3,2,3},
    {3,1,3,1,1,1,2,1,1,1,1,1,2,1,1,1,1,3,1,3},
    {3,2,3,1,3,3,3,1,3,3,3,3,1,3,3,3,1,3,2,3},
    {3,1,1,1,3,2,2,1,1,2,2,1,1,2,2,3,1,1,1,3},
    {3,2,3,1,3,2,3,3,3,3,3,3,3,3,2,3,1,3,2,3},
    {3,1,3,1,3,1,1,1,2,1,1,2,1,1,1,3,1,3,1,3},
    {3,2,3,1,3,3,3,1,3,3,3,3,1,3,3,3,1,3,2,3},
    {3,1,1,1,1,1,2,1,1,2,1,1,1,2,1,1,1,1,1,3},
    {3,2,3,3,3,1,3,3,3,3,3,3,3,3,1,3,3,3,2,3},
    {3,1,1,1,3,1,1,1,2,1,1,2,1,1,1,3,1,1,1,3},
    {3,2,3,1,3,3,3,1,3,3,3,3,1,3,3,3,1,3,2,3},
    {3,1,3,1,1,1,2,1,1,1,1,1,1,2,1,1,1,3,1,3},
    {3,2,3,3,3,1,3,3,3,3,3,3,3,3,1,3,3,3,2,3},
    {3,1,1,1,1,2,1,1,1,2,1,1,1,2,1,1,1,1,1,3},
    {3,2,3,1,3,3,3,1,3,3,3,3,1,3,3,3,1,3,2,3},
    {3,1,3,1,1,1,1,1,2,1,1,2,1,1,1,1,1,3,1,3},
    {3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3}
};

// Map 2: Siêu Khó (20x20)
static int map2[20][20] = {
    {3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
    {3,2,2,2,1,1,1,2,2,1,2,2,1,1,1,2,2,2,2,3},
    {3,2,3,3,3,1,3,3,3,3,3,3,3,1,3,3,3,3,2,3},
    {3,1,3,1,1,1,2,1,1,1,1,1,2,1,1,1,1,3,1,3},
    {3,2,3,1,3,3,3,1,3,3,3,3,1,3,3,3,1,3,2,3},
    {3,1,1,1,3,2,2,1,1,2,2,1,1,2,2,3,1,1,1,3},
    {3,2,3,1,3,2,3,3,3,3,3,3,3,3,2,3,1,3,2,3},
    {3,1,3,1,3,1,1,1,2,1,1,2,1,1,1,3,1,3,1,3},
    {3,2,3,1,3,3,3,1,3,3,3,3,1,3,3,3,1,3,2,3},
    {3,1,1,1,1,1,2,1,1,2,1,1,1,2,1,1,1,1,1,3},
    {3,2,3,3,3,1,3,3,3,3,3,3,3,3,1,3,3,3,2,3},
    {3,1,1,1,3,1,1,1,2,1,1,2,1,1,1,3,1,1,1,3},
    {3,2,3,1,3,3,3,1,3,3,3,3,1,3,3,3,1,3,2,3},
    {3,1,3,1,1,1,2,1,1,1,1,1,1,2,1,1,1,3,1,3},
    {3,2,3,3,3,1,3,3,3,3,3,3,3,3,1,3,3,3,2,3},
    {3,1,1,1,1,2,1,1,1,2,1,1,1,2,1,1,1,1,1,3},
    {3,2,3,1,3,3,3,1,3,3,3,3,1,3,3,3,1,3,2,3},
    {3,1,3,1,1,1,1,1,2,1,1,2,1,1,1,1,1,3,1,3},
    {3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3}
};
// kích thước của gạch
Level::Level() : m_tileW(40), m_tileH(15) {}

void Level::LoadMap(int mapIndex, SDL_Renderer* renderer) {
    m_bricks.clear();
    //int (*selectedMap)[20] = (mapIndex == 0) ? map1 : map2;
    int (*selectedMap)[20] =  map1;
    for (int row = 0; row < 20; ++row) {
        for (int col = 0; col < 20; ++col) {
            int val = selectedMap[row][col];
            if (val == 0) continue;

            std::string texture;
            int hp = 0; // Biến HP mới

            switch (val) {
                case 1:
                    texture = "brickeasy";
                    hp = 1;
                    break;
                case 2:
                    texture = "brickmedium";
                    hp = 2;
                    break;
                default:
                    texture = "brickhard"; // Gạch không thể phá
                    hp = -1; // HP = -1 (không thể phá)
                    break;
            }

            m_bricks.emplace_back(col * m_tileW, row * m_tileH + 50, m_tileW - 2, m_tileH - 2, hp, texture);
        }
    }
}

void Level::Draw(SDL_Renderer* renderer) {
    for (auto& brick : m_bricks) {
        brick.Draw(renderer);
    }
}

bool Level::AllCleared() const {
    for (const auto& b : m_bricks) {
        //  thắng:tất cả gạch (hp > 0) đã bị phá
        if (b.IsAlive()) return false;
    }
    return true;
}
